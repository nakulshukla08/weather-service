openapi: "3.0.2"
info:
  title: "OpenWeatherMap API"
  description: "Get the current weather, daily forecast for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results."
  version: "2.5"
  termsOfService: "https://openweathermap.org/terms"
  contact:
    name: "OpenWeatherMap API"
    url: "https://openweathermap.org/api"
    email: "some_email@gmail.com"
  license:
    name: "CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)"
    url: "https://openweathermap.org/price"

servers:
- url: "https://api.openweathermap.org/data/2.5"

paths:
  /forecast:
    get:
      tags:
      - Current Weather Data
      summary: "Call current weather data for one location"
      description: "Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations."
      operationId: CurrentWeatherData
      parameters:
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/cnt'
        - $ref: '#/components/parameters/units'
        - $ref: '#/components/parameters/lang'

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Weather not found
                type: string
                example: Not found
security:
- app_id: []

tags:
  - name: Current Weather Data
    description: "Get current weather details"

externalDocs:
  description: API Documentation
  url: https://openweathermap.org/api

components:
  parameters:
    q:
      name: q
      in: query
      description: "**City name**. *Example: London*. You can call by city name, or by city name and country code. The API responds with a list of results that match a searching word. For the query value, type the city name and optionally the country code divided by a comma; use ISO 3166 country codes."
      schema:
        type: string
    appid:
      name: appid
      in: query
      description: "Your unique API key"
      schema:
        type: string
    cnt:
      name: cnt
      in: query
      description: "A number of timestamps, which will be returned in the API response"
      schema:
        type: string
    units:
      name: units
      in: query
      description: '**Units**. *Example: imperial*. Possible values: `standard`, `metric`, and `imperial`. When you do not use the `units` parameter, the format is `standard` by default.'
      schema:
        type: string
        enum: [standard, metric, imperial]
        default: "imperial"
    lang:
      name: lang
      in: query
      description: '**Language**. *Example: en*. You can use lang parameter to get the output in your language. We support the following languages that you can use with the corresponded lang values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.'
      schema:
        type: string
        enum: [ar, bg, ca, cz, de, el, en, fa, fi, fr, gl, hr, hu, it, ja, kr, la, lt, mk, nl, pl, pt, ro, ru, se, sk, sl, es, tr, ua, vi, zh_cn, zh_tw]
        default: "en"
    mode:
      name: mode
      in: query
      description: "**Mode**. *Example: html*. Determines the format of the response. Possible values are `json`, `xml`, and `html`. If the mode parameter is empty, the format is `json` by default."
      schema:
        type: string
        enum: [json, xml, html]
        default: "json"
  schemas:
    "200":
      title: Successful response
      type: object
      properties:
        cod:
          type: string
        message:
          type: number
        cnt:
          type: number
        list:
          type: array
          items:
            type: object
            properties:
              dt:
                type: number
              main:
                type: object
                properties:
                  temp:
                    type: number
                  temp_min:
                    type: number
                  temp_max:
                    type: number
                  pressure:
                    type: number
                  sea_level:
                    type: number
                  grnd_level:
                    type: number
                  humidity:
                    type: number
                  temp_kf:
                    type: number
              weather:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    main:
                      type: string
                    description:
                      type: string
                    icon:
                      type: string
              clouds:
                type: object
                properties:
                  all:
                    type: number
              wind:
                type: object
                properties:
                  speed:
                    type: number
                  deg:
                    type: number
              sys:
                type: object
                properties:
                  pod:
                    type: string
              dt_txt:
                type: string
        city:
          type: object
          properties:
            id:
              type: number
            name:
              type: string
            coord:
              type: object
              properties:
                lat:
                  type: number
                lon:
                  type: number
            country:
              type: string
      